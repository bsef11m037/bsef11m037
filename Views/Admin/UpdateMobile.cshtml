@{
    
}

@model MobileEra.Models.mobile


<div class="row" style="margin-top:10px">
    <div class="col-md-8 col-md-offset-1">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h2>Update Mobile</h2>
                <hr class="colorgraph" />
            </div>
            <div class="panel-body">
                <form role="form" action="/Admin/updateMobileDone" method="post" enctype="multipart/form-data">
                                        
                    <div class="form-group bs-float-label">
                    @Html.LabelFor(x => x.Made, new { @class = "float-label" })
                        <select class="form-control float-input" id="Made" name="Made">
                            <option value="Nokia">Nokia</option>
                            <option value="Samsung">Samsung</option>
                            <option value="HTC">HTC</option>
                            <option value="Qmobile">QMobile</option>
                            <option value="Huawei">Huawei</option>
                            <option value="G'five">G'five</option> 
                        </select>
                    </div>
                    <div class="form-group bs-float-label">
                        @Html.LabelFor(x => x.Model, new { @class = "float-label" })
                        @Html.TextBoxFor(x => x.Model, new { @class = "form-control float-input", placeholder = "Model",value=Model.Model})                        
                    </div>
                    <div class="form-group bs-float-label">
                        @Html.LabelFor(x=>x.OS, new { @class = "float-label" })
                        @Html.TextBoxFor(x => x.OS, new { @class = "form-control float-input", placeholder = "Operating System" ,value=Model.OS})
                        @Html.ValidationMessageFor(x => x.OS)
                    </div>
                    <div class="form-group bs-float-label">
                        @Html.LabelFor(x=>x.Screen_Size, new { @class = "float-label" })
                        @Html.TextBoxFor(x => x.Screen_Size, new { @class = "form-control float-input", placeholder = "Screen Size" ,value=Model.Price})
                        @Html.ValidationMessageFor(x => x.Screen_Size)
                    </div>
                    <div class="form-group bs-float-label">
                        @Html.LabelFor(x=>x.Price, new { @class = "float-label" })
                        @Html.TextBoxFor(x => x.Price, new { @class = "form-control float-input", placeholder = "Price" ,value=Model.Price})
                        @Html.ValidationMessageFor(x => x.Price)
                    </div>
                    <div class="form-group bs-float-label">
                        @Html.LabelFor(x=>x.Processor, new { @class = "float-label" })
                        @Html.TextBoxFor(x => x.Processor, new { @class = "form-control float-input", placeholder = "Processor" ,value=Model.Processor})
                        @Html.ValidationMessageFor(x => x.Processor)
                    </div>
                    <div class="form-group bs-float-label">
                        @Html.LabelFor(x=>x.Weight, new { @class = "float-label" })
                        @Html.TextBoxFor(x => x.Weight, new { @class = "form-control float-input", placeholder = "Weight" ,value=Model.Weight})
                        @Html.ValidationMessageFor(x => x.Weight)
                    </div>
                    <div class="form-group bs-float-label">
                        @Html.LabelFor(x=>x.Battery, new { @class = "float-label" })
                        @Html.TextBoxFor(x => x.Battery, new { @class = "form-control float-input", placeholder = "Batery Capacity" ,value=Model.Battery})
                        @Html.ValidationMessageFor(x => x.Battery)
                    </div>
                    <div class="form-group bs-float-label">
                        @Html.LabelFor(x=>x.Others, new { @class = "float-label" })
                        @Html.TextBoxFor(x => x.Others, new { @class = "form-control float-input", placeholder = "others" ,value=Model.Others})
                        @Html.ValidationMessageFor(x => x.Others)
                    </div>              
                    

                    <!-- image-preview-filename input [start FROM HERE]-->
                    <div class="input-group image-preview">
                        <input type="text" class="form-control image-preview-filename" disabled="disabled">
                        <!-- don't give a name === doesn't send on POST/GET -->
                        <span class="input-group-btn">
                            <!-- image-preview-clear button -->
                            <button type="button" class="btn btn-default image-preview-clear" style="display: none;">
                                <span class="glyphicon glyphicon-remove"></span>Clear
                            </button>
                            <!-- image-preview-input -->
                            <div class="btn btn-default image-preview-input">
                                <span class="glyphicon glyphicon-folder-open"></span>
                                <span class="image-preview-input-title">Browse</span>
                                <input type="file" accept="image/png, image/jpeg, image/gif" name="input-file-preview" />
                                <!-- rename it -->
                            </div>
                        </span>
                    </div><!-- /input-group image-preview [end HERE]--> 
                    
                    <input type="submit" class="btn btn-lg btn-success btn-block" value="Done" />
                </form>
            </div>
        </div>
    </div>
</div>



